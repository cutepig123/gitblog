<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/cutepig123/gitblog</id><title>RSS feed of cutepig123's gitblog</title><updated>2023-04-15T07:25:21.983287+00:00</updated><author><name>cutepig123</name><email>jinshouhe@gmail.com</email></author><link href="https://github.com/cutepig123/gitblog"/><link href="https://raw.githubusercontent.com/cutepig123/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator><entry><id>https://github.com/cutepig123/gitblog/issues/20</id><title>電影電視劇</title><updated>2023-04-15T07:25:22.344540+00:00</updated><content type="html"><![CDATA[<p>電影電視劇</p>
<p>搜了一下如下主題的電影電視劇：程序員電影 程序員電視劇  技術創業電影 創業紀錄片 程序員紀錄片</p>
<p>硅谷传奇 Pirates of Silicon Valley[3]
社交网络 The Social Network[2]
超验骇客 Transcendence[8]
代码奔腾 Code Rush (2000)[9]
硅谷第一季
互联网之子(The Internet's Own Boy: The Story of Aaron Swartz)
【七集纪录片】像程序员一样思考-Think Like a Coder
央视为程序员拍了纪录片，《码农的异想世界》
无节制消费元凶，多个平台都可以看，评分8.8
为什么贫穷，这部纪录片一共八集，每集一小时
富哥哥穷弟弟，这部纪录片记录了1对亲生兄弟
走进比尔：解码比尔盖茨，评分9.3
美国商业大亨传奇评分9.3
富翁谷底翻身技巧
金钱与我，评分8.2
成为沃伦巴菲特，评分8.7
一团火：小米创业 8 年内部纪录片
2015 年主演的电影《史蒂夫·乔布斯》。
操作系统革命 Rovolutuon OS
《运转乾坤》 该片被沃顿商学院名列金融电影必看第一位。讲述了瓦伦丁从街头乞讨的黑人小混混与从事期货交易的温索普互换身份的故事
《可口可乐小子》
《华尔街》
《抢钱世界》
门口的野蛮人》
教父
《网络风云
企业人格诊断书
优势合作》
当幸福来敲men
《实习大叔》
《中国合伙人》
《创世纪》中国评分8.5-9.0全2部107集
《天 道》中国评分9.2全24集
《大染坊》中国评分9.2全24集
《大时代》中国评分9.3全40集
《大宅门》中国评分9.4全40集
《亿 万》美国评级8.9-9.3全6季72集
《纸钞屋》西班牙比分8.6-9.4共5季48集
《硅 谷》美国比分9.2-9.4共6季第53集
《创业年代》</p>
<h1>Ref</h1>
<p><a href="https://cloud.tencent.com/developer/article/1799356">https://cloud.tencent.com/developer/article/1799356</a>
<a href="https://www.runoob.com/w3cnote/10-programmer-documentary.html">https://www.runoob.com/w3cnote/10-programmer-documentary.html</a>
<a href="https://zhuanlan.zhihu.com/p/536681290">https://zhuanlan.zhihu.com/p/536681290</a>
<a href="http://m.cyol.com/content/2018-03/10/content_17010436.htm">http://m.cyol.com/content/2018-03/10/content_17010436.htm</a>
<a href="https://www.163.com/dy/article/HKRRTJQ40553P17N.html">https://www.163.com/dy/article/HKRRTJQ40553P17N.html</a>
<a href="http://m.cnr.cn/news/20200927/t20200927_525279105.html">http://m.cnr.cn/news/20200927/t20200927_525279105.html</a></p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/20" rel="alternate"/><published>2023-04-15T06:14:40+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/19</id><title> 20230407放假四天</title><updated>2023-04-15T07:25:22.513567+00:00</updated><content type="html"><![CDATA[<h1>20230407</h1>
<h2>done</h2>
<ul>
<li>
<del>語音識別，</del><ul>
<li><del>OpenAI Whisper 模型</del></li>
<li><del><a href="https://pytranscriber.github.io/download/">https://pytranscriber.github.io/download/</a> crash</del></li>
</ul>
</li>
<li>
<del>推荐播客app。如何给播客添加字幕？ podcast transript https://www.zhihu.com/question/21067130</del><ul>
<li><del>打开chrome的实时字幕功能，只能在桌面使用</del></li>
<li><del>App名字: SNIPD。能通过AI识别语音转换成文本，甚至带时间轴，正如问题描述所说，像歌词一样显示。而且文本准确度很高。还会用speaker 1, speaker 2…… 区分出节目中的不同说话者。注意: 每一期节目的文本可能会花费几分钟时间转换完成。其他宝藏功能: 每一期节目可智能划分章节，点击即可跳转。</del></li>
<li><del>eslpodcast 英语教学 带字幕</del></li>
<li><del>我用的app不支持字幕 https://github.com/AntennaPod/AntennaPod/issues/4935</del></li>
</ul>
</li>
<li>
<del>推荐播客</del><ul>
<li><del>This American Life</del></li>
<li><del>This I Belive</del></li>
<li><del>NPR Ted hour，American Scientific没有字幕</del></li>
<li><del>ESL，Grammer girl</del></li>
<li><del>BBC出品的The Documentary</del></li>
</ul>
</li>
<li>
远程访问<ul>
<li><del>vscode remote tunnel test: 链接的时候报错说是连不上<code>Workbench 無法連線到伺服器 (錯誤: WrappedError(WrappedError { message: &quot;timed out looking for socket&quot;, original: &quot;deadline has elapsed&quot; }))</code>，并且会有一个code_tunnel进程，看起来有些不正常</del></li>
<li>jumpserver test</li>
<li>牧云主机助手测试</li>
</ul>
</li>
<li><del>地租交钱</del></li>
<li>llama 自学习</li>
<li><del>非那雄胺：非那雄胺需要长期使用，并且最好维持每天1mg的治疗用量长期治疗。非那雄胺一般耐受性良好，不良反应通常轻微，一般不必中止治疗。中止非那雄胺治疗后这些不良反应消失，也有许多患者在继续用药的过程中这些不良反应自行消失。非那雄胺是目前人类对抗脱发最好的药物，临床上其有效率70-90%，40-60%可以显著改善脱发外观。副作用发生率不高于3%，不良反应停药后2周左右都可以消退.</del> 买了，等待拿回来</li>
<li><del>洗何庆宇和我自己的衣服，以及枕套</del></li>
<li><del>清洁地板</del>，厕所马桶<del>，洗地机</del></li>
<li><del>bazel试用以及与modern cmake比较</del></li>
<li>玩玩买的单片机：马达，温度，距离</li>
</ul>
<h2>in progress</h2>
<ul>
<li>接活，看看zhihu上一般用啥技术接活效率高</li>
<li>智能家居：人物识别</li>
<li>智能家居：chatgpt</li>
<li>搞定所you内地账户网银，尤其银行，手机<del>，陆金所</del></li>
<li>手机空间咋清理？</li>
<li>弄一下老婆的回家之后翻墙上网</li>
<li>shein買東西：需要超过二百才免运费</li>
<li>telegram上的东西</li>
<li>pocket上的东西</li>
<li>trello上的东西</li>
<li>
学习vlog视频制作<ul>
<li>目标：我只需要简单准备一个ppt或者视频加字幕，他就做一个视频出来</li>
<li>tts人工语音合成字幕</li>
<li>AI主持人</li>
</ul>
</li>
<li>
<del>远距离拾音，麦克风阵列</del><ul>
<li><del>小爱音箱拆解，破解</del>失败</li>
</ul>
</li>
<li>申请护照</li>
</ul>
<h2>项目</h2>
<ul>
<li>
类似于SNIPD带AI语音识别的app<ul>
<li>Value 学英文的人有这个需要，但具体多少人会花钱买不好说。具体做起来可能还是免费为主但是用流量限制</li>
<li>Effort 开发成本应该不算多，一个是app，一个是服务器成本</li>
<li>
</li>
</ul>
</li>
</ul>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/19" rel="alternate"/><category term="TODO"/><published>2023-04-10T14:34:23+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/18</id><title>疑问：直流伺服电机停在某个位置的时候是否是所谓的“堵转”？</title><updated>2023-04-15T07:25:22.700619+00:00</updated><content type="html"><![CDATA[<p>我发现网上有人已经问过类似。但是没有回。</p>
<p><a href="https://www.amobbs.com/thread-5545108-1-1.html">https://www.amobbs.com/thread-5545108-1-1.html</a></p>
<p>直流伺服电机用在平衡车上，电机电流问题请教：</p>
<p>一、印象中有本教材上提到伺服电机因内阻较小，启动电流或者说堵转电流较大，因此不允许直流电机不允许长期处于堵转状态，以防止电流过大烧毁电
源或电机，原因是启动瞬间因电机转速为零，没有建立反电动势，此时的电流I=电压U/电机直流内阻R，近似短路电流，因此启动电流比较大。</p>
<p>二、问题：</p>
<p>2.1 直流电机的启动电流最大值和堵转电流是一样大吗？</p>
<p>2.2 我手头上有个直流电机，额定电压是12V，测量内阻是1.1欧，这个电机的启动电流最大值（堵转电流）是不是10A左右？，如果用12V,100W的电源，那它的功率（100瓦）就不满足电机瞬时启动功率(约111瓦)的要求？是不是要限流启动，或者改用软启动方式（软启动方式用在位置伺服中是否合适？）；或换大功率200W、400W电源？</p>
<p>2.3 最想不通的一点：平衡小车处于平衡位置（此时应该是动态平衡吧，就是频繁正反转，也就是反复的起-停-起-停......，反反复复的启动，电流是否很大
呢？），此时电机是否处于堵转状态？此时的电流是不是堵转电流？如果是，电源是不是一直需要频繁的输出大电流？</p>
<p>2.4 平衡小车处于平衡状态，“堵转电流”和负载的惯量有关系吗？如果保持平衡时的电流是“堵转电流”，那不就和负载惯量没关系了，感觉不对啊？</p>
<p>ref
什么是 <a href="https://www.yibumotor.com/news/656.html">https://www.yibumotor.com/news/656.html</a></p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/18" rel="alternate"/><published>2023-04-10T08:12:22+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/17</id><title>欢乐颂3</title><updated>2023-04-15T07:25:22.858823+00:00</updated><content type="html"><![CDATA[<p>欢乐颂3</p>
<p>豆瓣评分挺差的，可是我觉得还不错。</p>
<p>然后跟之前还是差不多，就是嗯，年轻小妹妹，但是你家庭背景各有不同。还是挺有实际的，现实的代表性。比如当大姐，家里一堆弟弟妹妹要照顾。但是平均来看这个片里面这一堆女人还是高于我们现实中的人的倍镜，实力，和水平了。</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/17" rel="alternate"/><published>2023-04-09T06:21:47+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/16</id><title>虽然马云经常哗众取宠，但是他说的有些话还是很有道理的</title><updated>2023-04-15T07:25:23.015619+00:00</updated><content type="html"><![CDATA[<p>虽然马云经常哗众取宠，但是他说的有些话还是很有道理的。企业的战略不应该是跟钱相关的，天天想钱的财务官不可能做好CEO。https://www.youtube.com/watch?v=TiB_TjlxYNM&amp;ab_channel=%E5%A4%A7%E7%83%AD%E9%97%A8 一个做企业家要做得久，做得好，他每天考虑的大部分的事情都应该跟钱没有关系，和钱有关的都不是战略性的。不以利益为出发点的战略决策，才是真正的庙堂之策。所以我一直相信一个好的财务总监很难做好董事长，因为好的财务总监脑子里全部都是钱，脑子里全是钱的人是很难做好事情</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/16" rel="alternate"/><published>2023-04-08T13:54:34+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/15</id><title>物理学变成玄学了</title><updated>2023-04-15T07:25:23.179476+00:00</updated><content type="html"><![CDATA[<p>量子擦除，双峰干涉，物理学变成玄学了。终于明白爱因斯坦老爷子的心态了。https://www.youtube.com/watch?v=Ik58awh2Mp4&amp;ab_channel=%E6%9D%8E%E6%B0%B8%E4%B9%90%E8%80%81%E5%B8%88</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/15" rel="alternate"/><published>2023-04-08T13:38:41+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/14</id><title>播客podcast </title><updated>2023-04-15T07:25:23.352441+00:00</updated><content type="html"><![CDATA[<ul>
<li>
推荐播客app。如何给播客添加字幕？ podcast transript <a href="https://www.zhihu.com/question/21067130">https://www.zhihu.com/question/21067130</a><ul>
<li>打开chrome的实时字幕功能，只能在桌面使用</li>
<li>App名字: SNIPD。能通过AI识别语音转换成文本，甚至带时间轴，正如问题描述所说，像歌词一样显示。而且文本准确度很高。还会用speaker 1, speaker 2…… 区分出节目中的不同说话者。注意: 每一期节目的文本可能会花费几分钟时间转换完成。其他宝藏功能: 每一期节目可智能划分章节，点击即可跳转。</li>
<li>eslpodcast 英语教学 带字幕</li>
<li>我用的app不支持字幕 <a href="https://github.com/AntennaPod/AntennaPod/issues/4935">https://github.com/AntennaPod/AntennaPod/issues/4935</a></li>
</ul>
</li>
<li>
推荐播客<ul>
<li>This American Life</li>
<li>This I Belive</li>
<li>NPR Ted hour，American Scientific没有字幕</li>
<li>ESL，Grammer girl</li>
<li>BBC出品的The Documentary</li>
</ul>
</li>
</ul>
<p>TODO</p>
<ul>
<li><input disabled="" type="checkbox"> 让播客app支持字幕 <a href="https://github.com/AntennaPod/AntennaPod/issues/4935">https://github.com/AntennaPod/AntennaPod/issues/4935</a></li>
<li><input disabled="" type="checkbox"> 自建rss服务，使用openai whisper ai模型给播客增加字幕</li>
</ul>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/14" rel="alternate"/><published>2023-04-08T04:25:12+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/13</id><title>windows版本的timeit</title><updated>2023-04-15T07:25:23.508227+00:00</updated><content type="html"><![CDATA[<p>代码是从stackoverflow里面找的https://stackoverflow.com/questions/673523/how-do-i-measure-execution-time-of-a-command-on-the-windows-command-line</p>
<pre><code class="language-bash">@echo off
@setlocal

set start=%time%
echo %start%

:: Runs your command
cmd /c %*

set end=%time%
set options=&quot;tokens=1-4 delims=:.,&quot;
for /f %options% %%a in (&quot;%start%&quot;) do set start_h=%%a&amp;set /a start_m=100%%b %% 100&amp;set /a start_s=100%%c %% 100&amp;set /a start_ms=100%%d %% 100
for /f %options% %%a in (&quot;%end%&quot;) do set end_h=%%a&amp;set /a end_m=100%%b %% 100&amp;set /a end_s=100%%c %% 100&amp;set /a end_ms=100%%d %% 100

set /a hours=%end_h%-%start_h%
set /a mins=%end_m%-%start_m%
set /a secs=%end_s%-%start_s%
set /a ms=%end_ms%-%start_ms%
if %ms% lss 0 set /a secs = %secs% - 1 &amp; set /a ms = 100%ms%
if %secs% lss 0 set /a mins = %mins% - 1 &amp; set /a secs = 60%secs%
if %mins% lss 0 set /a hours = %hours% - 1 &amp; set /a mins = 60%mins%
if %hours% lss 0 set /a hours = 24%hours%
if 1%ms% lss 100 set ms=0%ms%

:: Mission accomplished
set /a totalsecs = %hours%*3600 + %mins%*60 + %secs%
echo start=%start%
echo end=%end%
echo command took %hours%:%mins%:%secs%.%ms% (%totalsecs%.%ms%s total)

</code></pre>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/13" rel="alternate"/><published>2023-04-07T15:15:42+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/12</id><title>语音合成tts测试</title><updated>2023-04-15T07:25:23.664245+00:00</updated><content type="html"><![CDATA[<p>语音合成tts测试</p>
<p>微软的edge tts</p>
<pre><code class="language-bash"># https://pypi.org/project/edge-tts/
pip install edge-tts
path %path%;F:\Users\cutepig\Downloads\mpv-x86_64-20230402-git-0f13c38

edge-tts --text &quot;Hello, world!&quot; --write-media hello.mp3
edge-playback --text &quot;Hello, world!&quot;
edge-playback --text &quot;你是谁 hello work&quot; --voice zh-TW-HsiaoYuNeural
edge-playback -f 1.txt --voice zh-TW-HsiaoYuNeural

# 实时输出，而不是通过中间文件
F:\&gt;edge-tts -f 1.txt --voice zh-TW-HsiaoYuNeural | mpv -
[file] Reading from stdin...
 (+) Audio --aid=1 (mp3 1ch 24000Hz)
AO: [wasapi] 48000Hz stereo 2ch float
A: 00:00:03 / 00:00:04 (74%)

</code></pre>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/12" rel="alternate"/><category term="NLP"/><published>2023-04-07T14:11:49+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/11</id><title>Openai whisper语音识别测试</title><updated>2023-04-15T07:25:23.833602+00:00</updated><content type="html"><![CDATA[<p>Openai whisper语音识别测试</p>
<pre><code>pip install git+https://github.com/openai/whisper.git 
path %path%;F:\sw\ffmpeg-4.1.4-win64-static\bin

whisper \\192.168.1.124\MyShare\podsync\stone\_apS6CxV_e0.mp3 --language Chinese --model medium
</code></pre>
<p>下载的Model在这里</p>
<pre><code>C:\WINDOWS\system32&gt;dir C:\Users\cutepig\.cache\whisper
 Volume in drive C is ssd
 Volume Serial Number is EB71-E2FB

 Directory of C:\Users\cutepig\.cache\whisper

2023/04/07  21:31    &lt;DIR&gt;          .
2023/04/07  21:31    &lt;DIR&gt;          ..
2023/04/07  21:23     1,528,008,539 medium.pt
2023/04/07  21:31       483,617,219 small.pt
               2 File(s)  2,011,625,758 bytes
               2 Dir(s)  53,389,697,024 bytes free
</code></pre>
<p>测试</p>
<pre><code>C:\Users\cutepig&gt;whisper \\192.168.1.124\MyShare\podsync\stone\_apS6CxV_e0.mp3 --language Chinese
f:\users\cutepig\appdata\local\programs\python\python38\lib\site-packages\whisper\transcribe.py:114: UserWarning: FP16 is not supported on CPU; using FP32 instead
  warnings.warn(&quot;FP16 is not supported on CPU; using FP32 instead&quot;)
[00:00.000 --&gt; 00:02.560] 大家好 今天是2020年的3月1号星期日
[00:02.560 --&gt; 00:04.160] 9天前我们报了一个消息
[00:04.160 --&gt; 00:06.320] 说美国和塔利班要签署和平前议
[00:06.320 --&gt; 00:07.200] 但是要等9天
[00:07.200 --&gt; 00:10.240] 要看塔利班那边能不能控制他们下巴的恐怖分子
[00:10.240 --&gt; 00:11.840] 9天过去了 控制得还不错
[00:11.840 --&gt; 00:12.800] 听伙搞得还挺好
[00:12.800 --&gt; 00:13.760] 美国也比较满意
[00:13.760 --&gt; 00:18.800] 美国国务卿蓬佩奥已经从华盛顿争飞机抵达了卡塔尔的首都
[00:18.800 --&gt; 00:20.480] 现在协议应该已经签完了
[00:20.480 --&gt; 00:21.200] 因为到3月1号了
[00:21.200 --&gt; 00:22.240] 协议应该已经签完了
[00:22.240 --&gt; 00:25.040] 结束了美国在阿富汗的18年的战争
[00:25.040 --&gt; 00:28.320] 那么从2001年的9月11号1911之后
</code></pre>
<p>测试whisper.cpp，失败</p>
<pre><code class="language-bash">cutepig@DESKTOP-CM4NK5L MINGW64 ~
$ cd /F/_codes/whisper.cpp

cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp
#下载模型
$ bash ./models/download-ggml-model.sh base.en
Downloading ggml model base.en from &#x27;https://huggingface.co/ggerganov/whisper.cpp&#x27; ...
ggml-base.en.bin         100%[==================================&gt;] 141.11M  9.55MB/s    in 13s
Done! Model &#x27;base.en&#x27; saved in &#x27;models/ggml-base.en.bin&#x27;
You can now use it like this:

  $ ./main -m models/ggml-base.en.bin -f samples/jfk.wav


cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp
# 编译代码
$ make
I whisper.cpp build info:
I UNAME_S:  MINGW64_NT-10.0-19044
I UNAME_P:  unknown
I UNAME_M:  x86_64
I CFLAGS:   -I.              -O3 -DNDEBUG -std=c11   -fPIC -mfma -mf16c -mavx -mavx2
I CXXFLAGS: -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC
I LDFLAGS:
I CC:       cc (GCC) 11.3.0
I CXX:      g++ (GCC) 11.3.0

cc  -I.              -O3 -DNDEBUG -std=c11   -fPIC -mfma -mf16c -mavx -mavx2   -c ggml.c -o ggml.o
g++ -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC -c whisper.cpp -o whisper.o
whisper.cpp: In function ‘void dft(const std::vector&lt;float&gt;&amp;, std::vector&lt;float&gt;&amp;)’:
whisper.cpp:2200:29: error: ‘M_PI’ was not declared in this scope
 2200 |             float angle = 2*M_PI*k*n/N;
      |                             ^~~~
whisper.cpp: In function ‘void fft(const std::vector&lt;float&gt;&amp;, std::vector&lt;float&gt;&amp;)’:
whisper.cpp:2251:25: error: ‘M_PI’ was not declared in this scope
 2251 |         float theta = 2*M_PI*k/N;
      |                         ^~~~
whisper.cpp: In function ‘bool log_mel_spectrogram(whisper_state&amp;, const float*, int, int, int, int, int, int, const whisper_filters&amp;, bool, whisper_mel&amp;)’:
whisper.cpp:2286:39: error: ‘M_PI’ was not declared in this scope
 2286 |         hann[i] = 0.5*(1.0 - cos((2.0*M_PI*i)/(fft_size)));
      |                                       ^~~~
make: *** [Makefile:194: whisper.o] Error 1

cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp
$ code .
-bash: code: command not found

cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp
$ code .
-bash: code: command not found

cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp
$ make
I whisper.cpp build info:
I UNAME_S:  MINGW64_NT-10.0-19044
I UNAME_P:  unknown
I UNAME_M:  x86_64
I CFLAGS:   -I.              -O3 -DNDEBUG -std=c11   -fPIC -mfma -mf16c -mavx -mavx2
I CXXFLAGS: -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC
I LDFLAGS:
I CC:       cc (GCC) 11.3.0
I CXX:      g++ (GCC) 11.3.0

g++ -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC -c whisper.cpp -o whisper.o
g++ -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC examples/main/main.cpp examples/common.cpp ggml.o whisper.o -o main
./main -h

usage: ./main [options] file0.wav file1.wav ...

options:
  -h,        --help              [default] show this help message and exit
  -t N,      --threads N         [4      ] number of threads to use during computation
  -p N,      --processors N      [1      ] number of processors to use during computation
  -ot N,     --offset-t N        [0      ] time offset in milliseconds
  -on N,     --offset-n N        [0      ] segment index offset
  -d  N,     --duration N        [0      ] duration of audio to process in milliseconds
  -mc N,     --max-context N     [-1     ] maximum number of text context tokens to store
  -ml N,     --max-len N         [0      ] maximum segment length in characters
  -sow,      --split-on-word     [false  ] split on word rather than on token
  -bo N,     --best-of N         [5      ] number of best candidates to keep
  -bs N,     --beam-size N       [-1     ] beam size for beam search
  -wt N,     --word-thold N      [0.01   ] word timestamp probability threshold
  -et N,     --entropy-thold N   [2.40   ] entropy threshold for decoder fail
  -lpt N,    --logprob-thold N   [-1.00  ] log probability threshold for decoder fail
  -su,       --speed-up          [false  ] speed up audio by x2 (reduced accuracy)
  -tr,       --translate         [false  ] translate from source language to english
  -di,       --diarize           [false  ] stereo audio diarization
  -nf,       --no-fallback       [false  ] do not use temperature fallback while decoding
  -otxt,     --output-txt        [false  ] output result in a text file
  -ovtt,     --output-vtt        [false  ] output result in a vtt file
  -osrt,     --output-srt        [false  ] output result in a srt file
  -owts,     --output-words      [false  ] output script for generating karaoke video
  -fp,       --font-path         [/System/Library/Fonts/Supplemental/Courier New Bold.ttf] path to a monospace font for karaoke video
  -ocsv,     --output-csv        [false  ] output result in a CSV file
  -oj,       --output-json       [false  ] output result in a JSON file
  -of FNAME, --output-file FNAME [       ] output file path (without file extension)
  -ps,       --print-special     [false  ] print special tokens
  -pc,       --print-colors      [false  ] print colors
  -pp,       --print-progress    [false  ] print progress
  -nt,       --no-timestamps     [true   ] do not print timestamps
  -l LANG,   --language LANG     [en     ] spoken language (&#x27;auto&#x27; for auto-detect)
             --prompt PROMPT     [       ] initial prompt
  -m FNAME,  --model FNAME       [models/ggml-base.en.bin] model path
  -f FNAME,  --file FNAME        [       ] input WAV file path

g++ -I. -I./examples -O3 -DNDEBUG -std=c++11 -fPIC examples/bench/bench.cpp ggml.o whisper.o -o bench

#执行测试，失败
cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp
$ ./main -f samples/jfk.wav
whisper_init_from_file_no_state: loading model from &#x27;models/ggml-base.en.bin&#x27;
whisper_model_load: loading model
whisper_model_load: n_vocab       = 51864
whisper_model_load: n_audio_ctx   = 1500
whisper_model_load: n_audio_state = 512
whisper_model_load: n_audio_head  = 8
whisper_model_load: n_audio_layer = 6
whisper_model_load: n_text_ctx    = 448
whisper_model_load: n_text_state  = 512
whisper_model_load: n_text_head   = 8
whisper_model_load: n_text_layer  = 6
whisper_model_load: n_mels        = 80
whisper_model_load: f16           = 1
whisper_model_load: type          = 2
whisper_model_load: mem required  =  218.00 MB (+    6.00 MB per decoder)
whisper_model_load: adding 1607 extra tokens
whisper_model_load: model ctx     =  140.60 MB
Illegal instruction (core dumped)

cutepig@DESKTOP-CM4NK5L MINGW64 /F/_codes/whisper.cpp

</code></pre>
<p>试用SpeechRecognition </p>
<p>这个包里面包含了很多云服务的语音识别功能，如果没有api key的话支持recognize_sphinx和recognize_google</p>
<p>我试了下中文，效果比whisper差很多</p>
<pre><code class="language-bash">AUDIO_FILE = path.join(path.dirname(path.realpath(__file__)), &quot;chinese.flac&quot;)
language = &#x27;zh-CN&#x27;
# recognize speech using Sphinx
try:
    print(&quot;Sphinx thinks you said &quot; + r.recognize_sphinx(audio, language=language))
except sr.UnknownValueError:
    print(&quot;Sphinx could not understand audio&quot;)

# 识别效果很差
F:\_codes&gt;python F:\_codes\speech_recognition\examples\audio_transcribe.py
Sphinx thinks you said 上 世纪 之交
Google Speech Recognition could not understand audio

F:\_codes&gt;whisper f:\_codes\speech_recognition\examples\chinese.flac --language Chinese
f:\users\cutepig\appdata\local\programs\python\python38\lib\site-packages\whisper\transcribe.py:114: UserWarning: FP16 is not supported on CPU; using FP32 instead
  warnings.warn(&quot;FP16 is not supported on CPU; using FP32 instead&quot;)
[00:00.000 --&gt; 00:01.000] 砸自己的腳
</code></pre>
<p>TODO</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 跑的太慢了，测一下https://github.com/ggerganov/whisper.cpp</li>
<li><input checked="" disabled="" type="checkbox"> 除了语音识别，还有啥local的语音生成的tts lib？或者能免费用微软的tts也行</li>
<li><input disabled="" type="checkbox"> 如何支持语音直接输入，而不是文件输入</li>
</ul>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/11" rel="alternate"/><category term="NLP"/><category term="TODO"/><published>2023-04-07T13:45:31+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/10</id><title>windows脚本：强制删除目录</title><updated>2023-04-15T07:25:24.020092+00:00</updated><content type="html"><![CDATA[<pre><code>SET DIRECTORY_NAME=%~1
TAKEOWN /f &quot;%DIRECTORY_NAME%&quot; /r /d y
ICACLS &quot;%DIRECTORY_NAME%&quot; /grant administrators:F /t
ICACLS &quot;%DIRECTORY_NAME%&quot; /reset /T
echo We will delete the folder &quot;%DIRECTORY_NAME%&quot;
PAUSE
rd/s/q &quot;%DIRECTORY_NAME%&quot;


</code></pre>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/10" rel="alternate"/><published>2023-04-07T11:32:55+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/9</id><title>网传拼多多APP恶意提取权限，偷窥用户隐私，偷偷安装应用。</title><updated>2023-04-15T07:25:24.192060+00:00</updated><content type="html"><![CDATA[<p>真是烂透了。</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/9" rel="alternate"/><published>2023-04-06T13:21:23+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/8</id><title>网传“中国电科成都员工痛批领导安排加班”，四川省与成都市总工会介入</title><updated>2023-04-15T07:25:24.372885+00:00</updated><content type="html"><![CDATA[<p>我只能说，真他妈烂透了。</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/8" rel="alternate"/><published>2023-04-05T15:27:07+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/7</id><title>个人密码管理软件</title><updated>2023-04-15T07:25:24.544531+00:00</updated><content type="html"><![CDATA[<p>微软的Microsoft authenticator。这个是我现在正在用的，还在试用期间。</p>
<p>剩下这几个还没用过，但据说是开源免费的。如果有需要可以玩一下。
keenpass</p>
<p>Bitwarden</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/7" rel="alternate"/><published>2023-04-05T04:19:41+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/6</id><title>alpaca.cpp</title><updated>2023-04-15T07:25:24.748431+00:00</updated><content type="html"><![CDATA[<p>alpaca.cpp</p>
<p>这是啥：一个基于llama微调后的模型</p>
<p>如何本地运行？</p>
<ul>
<li>下载code <a href="https://github.com/antimatter15/alpaca.cpp">https://github.com/antimatter15/alpaca.cpp</a></li>
<li>下载模型 <code>Torrent: </code>magnet:?xt=urn:btih:053b3d54d2e77ff020ebddf51dad681f2a651071&amp;dn=ggml-alpaca-13b-q4.bin&amp;tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337%2Fannounce&amp;tr=udp%3A%2F%2Fopentracker.i2p.rocks%3A6969%2Fannounce&amp;tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A6969%2Fannounce&amp;tr=udp%3A%2F%2F9.rarbg.com%3A2810%2Fannounce``</li>
<li>编译运行</li>
</ul>
<pre><code>git clone https://github.com/antimatter15/alpaca.cpp
cd alpaca.cpp

cmake .
cmake --build . --config Release
.\Release\chat.exe

E:\&gt;F:\_codes\alpaca.cpp\build\debug\chat.exe
main: seed = 1679276051
llama_model_load: loading model from &#x27;ggml-alpaca-7b-q4.bin&#x27; - please wait ...
llama_model_load: ggml ctx size = 6065.34 MB
llama_model_load: memory_size =  2048.00 MB, n_mem = 65536
llama_model_load: loading model part 1/1 from &#x27;ggml-alpaca-7b-q4.bin&#x27;
llama_model_load: ....... done
llama_model_load: model size =   842.06 MB / num tensors = 59

system_info: n_threads = 4 / 4 | AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 0 | NEON = 0 | ARM_FMA = 0 | F16C = 0 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 0 | VSX = 0 |
main: interactive mode on.
sampling parameters: temp = 0.100000, top_k = 40, top_p = 0.950000, repeat_last_n = 64, repeat_penalty = 1.300000

</code></pre>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/6" rel="alternate"/><category term="NLP"/><published>2023-03-20T01:20:52+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/5</id><title>小爱音箱使用chatgpt</title><updated>2023-04-15T07:25:24.932085+00:00</updated><content type="html"><![CDATA[<p>尝试了下https://github.com/yihong0618/xiaogpt，果然能用
就差一个openai账号了</p>
<pre><code>set OPENAI_API_KEY=${your_api_key}
xiaogpt --hardware L15A --use_chatgpt_api
</code></pre>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/5" rel="alternate"/><category term="smart home"/><published>2023-03-19T16:37:26+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/4</id><title>免費認證的課程</title><updated>2023-04-15T07:25:25.210009+00:00</updated><content type="html"><![CDATA[<p>免費認證
freecodecamp.org/chinese/</p>
<p>免費看，但沒有免費認證
<a href="https://www.classcentral.com/report/coursera-free-online-courses/#Computer%20Science">https://www.classcentral.com/report/coursera-free-online-courses/#Computer%20Science</a></p>
<p><a href="https://www.google.com/search?q=software+audit+courses+free&amp;biw=393&amp;bih=721&amp;sxsrf=AJOqlzWRdnC-RVsfyGdiauteqowY3jZI7g%3A1677916933512&amp;ei=BfsCZMPzHuX9hwO4poqQAg&amp;oq=software+audit+courses+free&amp;gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAMyBAgAEB4yBQghEKABMgUIIRCgATIFCCEQoAEyBQghEKABOgoIABBHENYEELADSgQIQRgAUMIGWMYOYOIPaAFwAHgAgAG5AYgBuQGSAQMwLjGYAQCgAQHIAQfAAQE&amp;sclient=mobile-gws-wiz-serp">https://www.google.com/search?q=software+audit+courses+free&amp;biw=393&amp;bih=721&amp;sxsrf=AJOqlzWRdnC-RVsfyGdiauteqowY3jZI7g%3A1677916933512&amp;ei=BfsCZMPzHuX9hwO4poqQAg&amp;oq=software+audit+courses+free&amp;gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAMyBAgAEB4yBQghEKABMgUIIRCgATIFCCEQoAEyBQghEKABOgoIABBHENYEELADSgQIQRgAUMIGWMYOYOIPaAFwAHgAgAG5AYgBuQGSAQMwLjGYAQCgAQHIAQfAAQE&amp;sclient=mobile-gws-wiz-serp</a></p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/4" rel="alternate"/><published>2023-03-19T15:27:55+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/3</id><title>项目</title><updated>2023-04-15T07:25:25.375965+00:00</updated><content type="html"><![CDATA[<h1>个人简介</h1>
<p>Many years software development working experience, strong C/C++ develop and debug skills, understanding of software design, generic programming, multi-threaded programming</p>
<p>Semiconductor industry vision inspection application background</p>
<p>Highly self-motivated, sincere, good team work, high analytical skills, curious at new knowledge, hard working</p>
<p>Technology stack: c++, Python, machine vision, windows desktop development, architecture design, Rust</p>
<p>多年软件开发工作经验，较强的C/C++开发调试能力，了解软件设计，泛型编程，多线程编程</p>
<p>半导体行业视觉检测应用背景</p>
<p>高度上进心，真诚，良好的团队合作精神，高分析能力，对新知识充满好奇，吃苦耐劳</p>
<p>技术栈：c++, Python, 机器视觉，windows桌面开发，架构设计, Rust</p>
<h1>个人项目：mypipe</h1>
<ul>
<li>功能：是一个代理服务器，但是支持自定义的协议。主要使用场合是在某些正常协议不能使用的时候,自定义协议就可以破除这些限制。</li>
<li>语言：python, Rust</li>
<li>架构：包含客户端和服务端。客户端通过网络连接到服务端之后，服务端接收外边的数据，然后把数据转发到客户端。客户端是用Python编写。服务端我写了两个，一个是用Python，一个是用Rust</li>
</ul>
<h1>公司项目：某游戏客户端国际化</h1>
<ul>
<li>功能：把基于MBCS的中文程序使用unicode编码实现国际化。</li>
<li>语言：C++</li>
<li>架构：这个程序是基于MFC的。主要的改动是把字符串处理改成Unicode编码。通过配置文件来配置语言显示</li>
</ul>
<h1>公司项目：机器视觉软件</h1>
<ul>
<li>功能：太阳能电池板3D检测系统。检查太阳能电池板的厚度, TTV是否符合要求，检测SawMark之类缺陷</li>
<li>语言：C++</li>
<li>架构：整个系统包含软件硬件以及光学。本人主要做软件方面。设计了整个应用的架构，以及主要的编码。大量使用多核运算提高UPH。使用内存池减少动态内存分配</li>
</ul>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/3" rel="alternate"/><published>2023-03-19T15:25:56+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/2</id><title>做一个modern c++的讲座</title><updated>2023-04-15T07:25:25.549732+00:00</updated><content type="html"><![CDATA[<h1>内容简介</h1>
<p>讲以前的best practise现在已经不是了，主要包括</p>
<ul>
<li>函数直接返回值，而不需要返回参数。移动语义等。以前的vector里面放sharedptr不需要了，可以通过编写可以移动的变量来做到</li>
<li>lambda，方便stl alg functional写法</li>
<li>auto</li>
<li>design pattern的老套做法的变革，现在更可以非侵入性。要求baseclass的，vs 鸭子类型</li>
</ul>
<h1>设计原则</h1>
<ul>
<li>封装。object维护内部状态</li>
<li>哪个更好，自由函数，成员函数，etc</li>
<li>尽量值语义 ，减少 引用语意</li>
<li>继承 vs fn object</li>
<li>prefer enforcement to convention</li>
</ul>
<h1>concerns</h1>
<ul>
<li>函数直接返回值：代码性能不是那么一目了然</li>
</ul>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/2" rel="alternate"/><published>2023-03-19T15:23:08+00:00</published></entry><entry><id>https://github.com/cutepig123/gitblog/issues/1</id><title>程序員怎樣在業餘時間掙到錢？</title><updated>2023-04-15T07:25:25.718435+00:00</updated><content type="html"><![CDATA[<h3>程序員怎樣在業餘時間掙到錢？</h3>
<p>ChatGPT
副業開發：利用技能可以自行開發應用程式，個人開發軟體、APP、插件等，將成品上架交易平台進行銷售。</p>
<p>代碼審核：可以利用擅長的編程技術為企業或其他開發者進行代碼審核，減少其系統中存在的問題和漏洞。</p>
<p>程序員顧問：利用自己的經驗和編程技能，為企業或個人提供諮詢服務，協助客戶解決程序開發方面的問題。</p>
<p>線上教育：成為線上教育平台上的編程課程教師，或開設自己的線上課程並銷售。</p>
<p>網站建設服務：開發商業或個人網站，提供定制化網站建設等服務。</p>
<p>遊戲開發：開發遊戲並透過線上平台銷售，利用自己的興趣展開業餘項目來獲取收益。</p>
<p>開發和銷售軟體插件：開發企業或個人需要的軟體插件，並在相關平台上銷售。</p>
<p>程序設計工具和模板：開發程式設計工具、模板、插件等，擺架線上市場銷售。</p>
<p>翻譯和編輯：利用自己的技能為公司進行編輯、寫作、翻譯工作等，為客戶提供一流的編程語言翻譯服務。</p>
<p>遠程工作：尋找適合的遠程工作機會，成為編程公司或開發商的遠程 freelancer，提供開發和編程方面的專業知識和經驗。</p>
<h3>程序員想做一些諮詢顧問，怎樣找到客戶呢？</h3>
<p>ChatGPT
作为一个程序员，如果你想做一些咨询顾问的工作，你可以通过以下方式来找到客户：</p>
<p>1.社交媒体：利用社交媒体平台，如LinkedIn，向潜在客户展示自己的专业技能和经验，寻找与自己专业领域相符的客户。</p>
<p>2.个人网站和博客：建立自己的个人网站和博客，展示自己的技能和经验，吸引有需要的客户。</p>
<p>参加行业活动：参加各种行业活动和会议，结交潜在客户。在这些活动中，你可以认识新人、建立联系、听取顾客需求并提供解决方案。
4.引荐：通过朋友、家人和现有客户的介绍，找到更多的客户。可以使用社交媒体或电子邮件来寻找这样的机会。</p>
<p>5.平台：加入线上咨询平台，如Upwork、Freelancer等，展示你的技能，并申请相关工作机会。</p>
<p>总之，通过这些方式，程序员可以找到更多的客户，并展示自己的专业技能，积累咨询经验。
你</p>
<h3>最強大的安卓逆向工具是什麼</h3>
<p>ChatGPT
作為一個AI語言模型，我不能直接提供建議。不過在逆向工具方面，以下幾個工具被認為是非常強大的：</p>
<p>Frida: Frida是一個動態的代碼注入工具，可以用於安卓逆向工作。</p>
<p>Apktool: Apktool是一個反編譯工具，可以用於對安卓應用程序進行解壓縮和反編譯。</p>
<p>Dex2jar: Dex2jar是一個工具，可以將Android DEX文件轉換為JAR文件。</p>
<p>Bytecode Viewer: Bytecode Viewer是一個Java反編譯器，可以用於對APK文件進行反編譯。</p>
<p>Androguard: Androguard是一個用於靜態分析的框架和工具，可以用於逆向安卓應用程序。</p>
<p>這些工具的強大程度取決於你的需求和技能水平。請注意，在逆向工作之前，請確保你有合法的授權和許可權。</p>
]]></content><link href="https://github.com/cutepig123/gitblog/issues/1" rel="alternate"/><published>2023-03-19T14:48:05+00:00</published></entry></feed>